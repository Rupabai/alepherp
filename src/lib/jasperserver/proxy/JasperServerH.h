/* JasperServerH.h
   Generated by gSOAP 2.8.5 from JasperServer.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef JasperServerH_H
#define JasperServerH_H
#include "JasperServerStub.h"

namespace JasperServer {
#ifndef WITH_NOIDREF
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 JasperServer_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 JasperServer_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 JasperServer_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_byte
#define SOAP_TYPE_JasperServer_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || JasperServer::soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_JasperServer_int
#define SOAP_TYPE_JasperServer_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || JasperServer::soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_JasperServer_std__string
#define SOAP_TYPE_JasperServer_std__string (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_JasperServer_SOAP_ENV__Fault
#define SOAP_TYPE_JasperServer_SOAP_ENV__Fault (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_SOAP_ENV__Fault(soap, data), 0) || JasperServer::soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_JasperServer_SOAP_ENV__Reason
#define SOAP_TYPE_JasperServer_SOAP_ENV__Reason (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_SOAP_ENV__Reason(soap, data), 0) || JasperServer::soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_JasperServer_SOAP_ENV__Detail
#define SOAP_TYPE_JasperServer_SOAP_ENV__Detail (34)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_SOAP_ENV__Detail(soap, data), 0) || JasperServer::soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_JasperServer_SOAP_ENV__Code
#define SOAP_TYPE_JasperServer_SOAP_ENV__Code (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_SOAP_ENV__Code(soap, data), 0) || JasperServer::soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_JasperServer_SOAP_ENV__Header
#define SOAP_TYPE_JasperServer_SOAP_ENV__Header (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_SOAP_ENV__Header(soap, data), 0) || JasperServer::soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_JasperServer_JasperServer__move
#define SOAP_TYPE_JasperServer_JasperServer__move (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__move(struct soap*, struct JasperServer__move *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__move(struct soap*, const struct JasperServer__move *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__move(struct soap*, const char*, int, const struct JasperServer__move *, const char*);
SOAP_FMAC3 struct JasperServer__move * SOAP_FMAC4 soap_in_JasperServer__move(struct soap*, const char*, struct JasperServer__move *, const char*);

#ifndef soap_write_JasperServer__move
#define soap_write_JasperServer__move(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__move(soap, data), 0) || JasperServer::soap_put_JasperServer__move(soap, data, "JasperServer:move", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__move(struct soap*, const struct JasperServer__move *, const char*, const char*);

#ifndef soap_read_JasperServer__move
#define soap_read_JasperServer__move(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__move(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__move * SOAP_FMAC4 soap_get_JasperServer__move(struct soap*, struct JasperServer__move *, const char*, const char*);

#define soap_new_JasperServer__move(soap, n) soap_instantiate_JasperServer__move(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__move(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__move * SOAP_FMAC2 soap_instantiate_JasperServer__move(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__move(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__moveResponse
#define SOAP_TYPE_JasperServer_JasperServer__moveResponse (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__moveResponse(struct soap*, struct JasperServer__moveResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__moveResponse(struct soap*, const struct JasperServer__moveResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__moveResponse(struct soap*, const char*, int, const struct JasperServer__moveResponse *, const char*);
SOAP_FMAC3 struct JasperServer__moveResponse * SOAP_FMAC4 soap_in_JasperServer__moveResponse(struct soap*, const char*, struct JasperServer__moveResponse *, const char*);

#ifndef soap_write_JasperServer__moveResponse
#define soap_write_JasperServer__moveResponse(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__moveResponse(soap, data), 0) || JasperServer::soap_put_JasperServer__moveResponse(soap, data, "JasperServer:moveResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__moveResponse(struct soap*, const struct JasperServer__moveResponse *, const char*, const char*);

#ifndef soap_read_JasperServer__moveResponse
#define soap_read_JasperServer__moveResponse(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__moveResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__moveResponse * SOAP_FMAC4 soap_get_JasperServer__moveResponse(struct soap*, struct JasperServer__moveResponse *, const char*, const char*);

#define soap_new_JasperServer__moveResponse(soap, n) soap_instantiate_JasperServer__moveResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__moveResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__moveResponse * SOAP_FMAC2 soap_instantiate_JasperServer__moveResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__moveResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__runReport
#define SOAP_TYPE_JasperServer_JasperServer__runReport (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__runReport(struct soap*, struct JasperServer__runReport *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__runReport(struct soap*, const struct JasperServer__runReport *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__runReport(struct soap*, const char*, int, const struct JasperServer__runReport *, const char*);
SOAP_FMAC3 struct JasperServer__runReport * SOAP_FMAC4 soap_in_JasperServer__runReport(struct soap*, const char*, struct JasperServer__runReport *, const char*);

#ifndef soap_write_JasperServer__runReport
#define soap_write_JasperServer__runReport(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__runReport(soap, data), 0) || JasperServer::soap_put_JasperServer__runReport(soap, data, "JasperServer:runReport", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__runReport(struct soap*, const struct JasperServer__runReport *, const char*, const char*);

#ifndef soap_read_JasperServer__runReport
#define soap_read_JasperServer__runReport(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__runReport(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__runReport * SOAP_FMAC4 soap_get_JasperServer__runReport(struct soap*, struct JasperServer__runReport *, const char*, const char*);

#define soap_new_JasperServer__runReport(soap, n) soap_instantiate_JasperServer__runReport(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__runReport(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__runReport * SOAP_FMAC2 soap_instantiate_JasperServer__runReport(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__runReport(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__runReportResponse
#define SOAP_TYPE_JasperServer_JasperServer__runReportResponse (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__runReportResponse(struct soap*, struct JasperServer__runReportResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__runReportResponse(struct soap*, const struct JasperServer__runReportResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__runReportResponse(struct soap*, const char*, int, const struct JasperServer__runReportResponse *, const char*);
SOAP_FMAC3 struct JasperServer__runReportResponse * SOAP_FMAC4 soap_in_JasperServer__runReportResponse(struct soap*, const char*, struct JasperServer__runReportResponse *, const char*);

#ifndef soap_write_JasperServer__runReportResponse
#define soap_write_JasperServer__runReportResponse(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__runReportResponse(soap, data), 0) || JasperServer::soap_put_JasperServer__runReportResponse(soap, data, "JasperServer:runReportResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__runReportResponse(struct soap*, const struct JasperServer__runReportResponse *, const char*, const char*);

#ifndef soap_read_JasperServer__runReportResponse
#define soap_read_JasperServer__runReportResponse(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__runReportResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__runReportResponse * SOAP_FMAC4 soap_get_JasperServer__runReportResponse(struct soap*, struct JasperServer__runReportResponse *, const char*, const char*);

#define soap_new_JasperServer__runReportResponse(soap, n) soap_instantiate_JasperServer__runReportResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__runReportResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__runReportResponse * SOAP_FMAC2 soap_instantiate_JasperServer__runReportResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__runReportResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__delete
#define SOAP_TYPE_JasperServer_JasperServer__delete (24)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__delete(struct soap*, struct JasperServer__delete *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__delete(struct soap*, const struct JasperServer__delete *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__delete(struct soap*, const char*, int, const struct JasperServer__delete *, const char*);
SOAP_FMAC3 struct JasperServer__delete * SOAP_FMAC4 soap_in_JasperServer__delete(struct soap*, const char*, struct JasperServer__delete *, const char*);

#ifndef soap_write_JasperServer__delete
#define soap_write_JasperServer__delete(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__delete(soap, data), 0) || JasperServer::soap_put_JasperServer__delete(soap, data, "JasperServer:delete", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__delete(struct soap*, const struct JasperServer__delete *, const char*, const char*);

#ifndef soap_read_JasperServer__delete
#define soap_read_JasperServer__delete(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__delete(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__delete * SOAP_FMAC4 soap_get_JasperServer__delete(struct soap*, struct JasperServer__delete *, const char*, const char*);

#define soap_new_JasperServer__delete(soap, n) soap_instantiate_JasperServer__delete(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__delete(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__delete * SOAP_FMAC2 soap_instantiate_JasperServer__delete(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__delete(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__deleteResponse
#define SOAP_TYPE_JasperServer_JasperServer__deleteResponse (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__deleteResponse(struct soap*, struct JasperServer__deleteResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__deleteResponse(struct soap*, const struct JasperServer__deleteResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__deleteResponse(struct soap*, const char*, int, const struct JasperServer__deleteResponse *, const char*);
SOAP_FMAC3 struct JasperServer__deleteResponse * SOAP_FMAC4 soap_in_JasperServer__deleteResponse(struct soap*, const char*, struct JasperServer__deleteResponse *, const char*);

#ifndef soap_write_JasperServer__deleteResponse
#define soap_write_JasperServer__deleteResponse(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__deleteResponse(soap, data), 0) || JasperServer::soap_put_JasperServer__deleteResponse(soap, data, "JasperServer:deleteResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__deleteResponse(struct soap*, const struct JasperServer__deleteResponse *, const char*, const char*);

#ifndef soap_read_JasperServer__deleteResponse
#define soap_read_JasperServer__deleteResponse(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__deleteResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__deleteResponse * SOAP_FMAC4 soap_get_JasperServer__deleteResponse(struct soap*, struct JasperServer__deleteResponse *, const char*, const char*);

#define soap_new_JasperServer__deleteResponse(soap, n) soap_instantiate_JasperServer__deleteResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__deleteResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__deleteResponse * SOAP_FMAC2 soap_instantiate_JasperServer__deleteResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__deleteResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__copy
#define SOAP_TYPE_JasperServer_JasperServer__copy (21)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__copy(struct soap*, struct JasperServer__copy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__copy(struct soap*, const struct JasperServer__copy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__copy(struct soap*, const char*, int, const struct JasperServer__copy *, const char*);
SOAP_FMAC3 struct JasperServer__copy * SOAP_FMAC4 soap_in_JasperServer__copy(struct soap*, const char*, struct JasperServer__copy *, const char*);

#ifndef soap_write_JasperServer__copy
#define soap_write_JasperServer__copy(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__copy(soap, data), 0) || JasperServer::soap_put_JasperServer__copy(soap, data, "JasperServer:copy", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__copy(struct soap*, const struct JasperServer__copy *, const char*, const char*);

#ifndef soap_read_JasperServer__copy
#define soap_read_JasperServer__copy(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__copy(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__copy * SOAP_FMAC4 soap_get_JasperServer__copy(struct soap*, struct JasperServer__copy *, const char*, const char*);

#define soap_new_JasperServer__copy(soap, n) soap_instantiate_JasperServer__copy(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__copy(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__copy * SOAP_FMAC2 soap_instantiate_JasperServer__copy(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__copy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__copyResponse
#define SOAP_TYPE_JasperServer_JasperServer__copyResponse (20)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__copyResponse(struct soap*, struct JasperServer__copyResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__copyResponse(struct soap*, const struct JasperServer__copyResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__copyResponse(struct soap*, const char*, int, const struct JasperServer__copyResponse *, const char*);
SOAP_FMAC3 struct JasperServer__copyResponse * SOAP_FMAC4 soap_in_JasperServer__copyResponse(struct soap*, const char*, struct JasperServer__copyResponse *, const char*);

#ifndef soap_write_JasperServer__copyResponse
#define soap_write_JasperServer__copyResponse(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__copyResponse(soap, data), 0) || JasperServer::soap_put_JasperServer__copyResponse(soap, data, "JasperServer:copyResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__copyResponse(struct soap*, const struct JasperServer__copyResponse *, const char*, const char*);

#ifndef soap_read_JasperServer__copyResponse
#define soap_read_JasperServer__copyResponse(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__copyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__copyResponse * SOAP_FMAC4 soap_get_JasperServer__copyResponse(struct soap*, struct JasperServer__copyResponse *, const char*, const char*);

#define soap_new_JasperServer__copyResponse(soap, n) soap_instantiate_JasperServer__copyResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__copyResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__copyResponse * SOAP_FMAC2 soap_instantiate_JasperServer__copyResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__copyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__list
#define SOAP_TYPE_JasperServer_JasperServer__list (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__list(struct soap*, struct JasperServer__list *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__list(struct soap*, const struct JasperServer__list *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__list(struct soap*, const char*, int, const struct JasperServer__list *, const char*);
SOAP_FMAC3 struct JasperServer__list * SOAP_FMAC4 soap_in_JasperServer__list(struct soap*, const char*, struct JasperServer__list *, const char*);

#ifndef soap_write_JasperServer__list
#define soap_write_JasperServer__list(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__list(soap, data), 0) || JasperServer::soap_put_JasperServer__list(soap, data, "JasperServer:list", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__list(struct soap*, const struct JasperServer__list *, const char*, const char*);

#ifndef soap_read_JasperServer__list
#define soap_read_JasperServer__list(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__list(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__list * SOAP_FMAC4 soap_get_JasperServer__list(struct soap*, struct JasperServer__list *, const char*, const char*);

#define soap_new_JasperServer__list(soap, n) soap_instantiate_JasperServer__list(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__list(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__list * SOAP_FMAC2 soap_instantiate_JasperServer__list(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__list(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__listResponse
#define SOAP_TYPE_JasperServer_JasperServer__listResponse (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__listResponse(struct soap*, struct JasperServer__listResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__listResponse(struct soap*, const struct JasperServer__listResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__listResponse(struct soap*, const char*, int, const struct JasperServer__listResponse *, const char*);
SOAP_FMAC3 struct JasperServer__listResponse * SOAP_FMAC4 soap_in_JasperServer__listResponse(struct soap*, const char*, struct JasperServer__listResponse *, const char*);

#ifndef soap_write_JasperServer__listResponse
#define soap_write_JasperServer__listResponse(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__listResponse(soap, data), 0) || JasperServer::soap_put_JasperServer__listResponse(soap, data, "JasperServer:listResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__listResponse(struct soap*, const struct JasperServer__listResponse *, const char*, const char*);

#ifndef soap_read_JasperServer__listResponse
#define soap_read_JasperServer__listResponse(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__listResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__listResponse * SOAP_FMAC4 soap_get_JasperServer__listResponse(struct soap*, struct JasperServer__listResponse *, const char*, const char*);

#define soap_new_JasperServer__listResponse(soap, n) soap_instantiate_JasperServer__listResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__listResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__listResponse * SOAP_FMAC2 soap_instantiate_JasperServer__listResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__listResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__put
#define SOAP_TYPE_JasperServer_JasperServer__put (15)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__put(struct soap*, struct JasperServer__put *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__put(struct soap*, const struct JasperServer__put *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__put(struct soap*, const char*, int, const struct JasperServer__put *, const char*);
SOAP_FMAC3 struct JasperServer__put * SOAP_FMAC4 soap_in_JasperServer__put(struct soap*, const char*, struct JasperServer__put *, const char*);

#ifndef soap_write_JasperServer__put
#define soap_write_JasperServer__put(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__put(soap, data), 0) || JasperServer::soap_put_JasperServer__put(soap, data, "JasperServer:put", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__put(struct soap*, const struct JasperServer__put *, const char*, const char*);

#ifndef soap_read_JasperServer__put
#define soap_read_JasperServer__put(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__put(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__put * SOAP_FMAC4 soap_get_JasperServer__put(struct soap*, struct JasperServer__put *, const char*, const char*);

#define soap_new_JasperServer__put(soap, n) soap_instantiate_JasperServer__put(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__put(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__put * SOAP_FMAC2 soap_instantiate_JasperServer__put(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__put(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__putResponse
#define SOAP_TYPE_JasperServer_JasperServer__putResponse (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__putResponse(struct soap*, struct JasperServer__putResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__putResponse(struct soap*, const struct JasperServer__putResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__putResponse(struct soap*, const char*, int, const struct JasperServer__putResponse *, const char*);
SOAP_FMAC3 struct JasperServer__putResponse * SOAP_FMAC4 soap_in_JasperServer__putResponse(struct soap*, const char*, struct JasperServer__putResponse *, const char*);

#ifndef soap_write_JasperServer__putResponse
#define soap_write_JasperServer__putResponse(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__putResponse(soap, data), 0) || JasperServer::soap_put_JasperServer__putResponse(soap, data, "JasperServer:putResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__putResponse(struct soap*, const struct JasperServer__putResponse *, const char*, const char*);

#ifndef soap_read_JasperServer__putResponse
#define soap_read_JasperServer__putResponse(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__putResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__putResponse * SOAP_FMAC4 soap_get_JasperServer__putResponse(struct soap*, struct JasperServer__putResponse *, const char*, const char*);

#define soap_new_JasperServer__putResponse(soap, n) soap_instantiate_JasperServer__putResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__putResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__putResponse * SOAP_FMAC2 soap_instantiate_JasperServer__putResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__putResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__get
#define SOAP_TYPE_JasperServer_JasperServer__get (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__get(struct soap*, struct JasperServer__get *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__get(struct soap*, const struct JasperServer__get *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__get(struct soap*, const char*, int, const struct JasperServer__get *, const char*);
SOAP_FMAC3 struct JasperServer__get * SOAP_FMAC4 soap_in_JasperServer__get(struct soap*, const char*, struct JasperServer__get *, const char*);

#ifndef soap_write_JasperServer__get
#define soap_write_JasperServer__get(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__get(soap, data), 0) || JasperServer::soap_put_JasperServer__get(soap, data, "JasperServer:get", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__get(struct soap*, const struct JasperServer__get *, const char*, const char*);

#ifndef soap_read_JasperServer__get
#define soap_read_JasperServer__get(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__get(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__get * SOAP_FMAC4 soap_get_JasperServer__get(struct soap*, struct JasperServer__get *, const char*, const char*);

#define soap_new_JasperServer__get(soap, n) soap_instantiate_JasperServer__get(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__get(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__get * SOAP_FMAC2 soap_instantiate_JasperServer__get(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__get(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_JasperServer_JasperServer__getResponse
#define SOAP_TYPE_JasperServer_JasperServer__getResponse (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_JasperServer__getResponse(struct soap*, struct JasperServer__getResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_JasperServer__getResponse(struct soap*, const struct JasperServer__getResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_JasperServer__getResponse(struct soap*, const char*, int, const struct JasperServer__getResponse *, const char*);
SOAP_FMAC3 struct JasperServer__getResponse * SOAP_FMAC4 soap_in_JasperServer__getResponse(struct soap*, const char*, struct JasperServer__getResponse *, const char*);

#ifndef soap_write_JasperServer__getResponse
#define soap_write_JasperServer__getResponse(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_JasperServer__getResponse(soap, data), 0) || JasperServer::soap_put_JasperServer__getResponse(soap, data, "JasperServer:getResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_JasperServer__getResponse(struct soap*, const struct JasperServer__getResponse *, const char*, const char*);

#ifndef soap_read_JasperServer__getResponse
#define soap_read_JasperServer__getResponse(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_JasperServer__getResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct JasperServer__getResponse * SOAP_FMAC4 soap_get_JasperServer__getResponse(struct soap*, struct JasperServer__getResponse *, const char*, const char*);

#define soap_new_JasperServer__getResponse(soap, n) soap_instantiate_JasperServer__getResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_JasperServer__getResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct JasperServer__getResponse * SOAP_FMAC2 soap_instantiate_JasperServer__getResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_JasperServer__getResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_JasperServer_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_JasperServer_PointerToSOAP_ENV__Reason (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || JasperServer::soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_JasperServer_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_JasperServer_PointerToSOAP_ENV__Detail (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || JasperServer::soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_JasperServer_PointerToSOAP_ENV__Code
#define SOAP_TYPE_JasperServer_PointerToSOAP_ENV__Code (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || JasperServer::soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE_JasperServer__QName
#define SOAP_TYPE_JasperServer__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize__QName(soap, data), 0) || JasperServer::soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_JasperServer_string
#define SOAP_TYPE_JasperServer_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (JasperServer::soap_serialize_string(soap, data), 0) || JasperServer::soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !JasperServer::soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

} // namespace JasperServer


#endif

/* End of JasperServerH.h */
